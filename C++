#include <iostream>

using namespace std;

class Point {
private:
    double x;
    double y;
    double z;

public:
    Point(double x = 0, double y = 0, double z = 0) : x(x), y(y), z(z) {}

    bool operator==(const Point& other) const {
        return (x == other.x) && (y == other.y) && (z == other.z);
    }

    bool operator!=(const Point& other) const {
        return !(*this == other);
    }

    Point operator-(const Point& other) const {
        return Point(x - other.x, y - other.y, z - other.z);
    }

    Point& operator++() {
        x++;
        y++;
        z++;
        return *this;
    }

    Point operator++(int) {
        Point temp = *this;
        ++(*this);
        return temp;
    }

    void display() const {
        cout << "Point(" << x << ", " << y << ", " << z << ")" << endl;
    }
};

int main() {
    Point p1(1.0, 2.0, 3.0);
    Point p2(4.0, 5.0, 6.0);
    Point p3(1.0, 2.0, 3.0);

    if (p1 == p3) {
        cout << "p1 и p3 равны." << endl;
    } else {
        cout << "p1 и p3 не равны." << endl;
    }

    Point p4 = p2 - p1;
    cout << "p2 - p1 = ";
    p4.display();

    cout << "p1 до инкремента: ";
    p1.display();
    ++p1;
    cout << "p1 после префиксного инкремента: ";
    p1.display();
    p1++;
    cout << "p1 после постфиксного инкремента: ";
    p1.display();

}
