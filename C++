1:
#include <iostream>
#include <vector>
#include <locale>

using namespace std;

bool isSymmetric(const vector<vector<int>>& matrix) {
    int n = matrix.size();

    for (const auto& row : matrix) {
        if (row.size() != n) {
            return false; 
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            if (matrix[i][j] != matrix[j][i]) {
                return false; 
            }
        }
    }

    return true; 
}

int main() {
    setlocale(LC_ALL, "rus");

    vector<vector<int>> matrix = {
        {1, 2, 3},
        {2, 4, 5},
        {3, 5, 6}
    };

    if (isSymmetric(matrix)) {
        cout << "Матрица симметрична." << endl;
    } else {
        cout << "Матрица не симметрична." << endl;
    }

}
2:
#include <iostream>
#include <vector>
#include <locale>

using namespace std;

bool areMatricesEqual(const vector<vector<int>>& matrix1, const vector<vector<int>>& matrix2) {
    if (matrix1.size() != matrix2.size() || matrix1[0].size() != matrix2[0].size()) {
        return false;
    }

    for (size_t i = 0; i < matrix1.size(); ++i) {
        for (size_t j = 0; j < matrix1[i].size(); ++j) {
            if (matrix1[i][j] != matrix2[i][j]) {
                return false;
            }
        }
    }

    return true;
}

int main() {
    setlocale(LC_ALL, "rus");

    vector<vector<int>> matrix1 = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    vector<vector<int>> matrix2 = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    vector<vector<int>> matrix3 = {
        {1, 2, 3},
        {4, 5, 0},
        {7, 8, 9}
    };

    if (areMatricesEqual(matrix1, matrix2)) {
        cout << "Матрицы равны." << endl;
    } else {
        cout << "Матрицы не равны." << endl;
    }

    if (areMatricesEqual(matrix1, matrix3)) {
        cout << "Матрицы равны." << endl;
    } else {
        cout << "Матрицы не равны." << endl;
    }

}
